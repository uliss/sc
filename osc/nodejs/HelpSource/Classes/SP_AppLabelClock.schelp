TITLE:: SP_AppLabelClock
summary:: nodejs clock app
categories:: Libraries>splib>NodeJS>app
related:: Classes/NodeJS, Classes/SP_AppLabel

DESCRIPTION::
NodeJS clock application, controlled by server.


CLASSMETHODS::

METHOD:: new
returns new instance

CODE::
NodeJS.restart
c = SP_AppLabelClock.new(10)
c.start
c.stop
::

ARGUMENT::
initial time in seconds

ARGUMENT::
sets reverse time moving


INSTANCEMETHODS::

METHOD:: stop
stops clock

METHOD:: start
starts clock

METHOD:: time
current time (automatically updated on connected clients)

ARGUMENT::
new time ins seconds

CODE::
NodeJS.restart
c = SP_AppLabelClock.new
c.time = 90
c.time = 180
::

METHOD:: reverse
if set to STRONG::true:: time moves backwards

CODE::
NodeJS.restart
c = SP_AppLabelClock.new
c.start
c.reverse = true
c.reverse = false
c.stop
::

METHOD:: schedAt
Schedules function call on given time

CODE::
NodeJS.restart
c = SP_AppLabelClock.new
Array.series(4, 4, 4).do { |v| c.schedAt(v, {c.blink}) }
c.start
c.stop
::

ARGUMENT::
time in seconds

ARGUMENT::
function callback

METHOD:: sync
manually sync current time with connected web clients

PRIVATE:: updateTime, initClock
